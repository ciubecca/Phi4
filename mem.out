EL/ET: 3
ELp/ET: 1.5
ELpp/ELp 1.5
Size of stateList in MB: 4.238464
Size of statePos in MB: 9.364528
Size of stateList in MB: 4.255064
Size of statePos in MB: 9.353416
k= 1
Full basis size:  12870
self.V[k][2] MB: 0.623008
self.V[k][4] MB: 15.333736
Size of stateList in MB: 4.255064
Size of statePos in MB: 9.353416
Hraw MB: 15.333736
Size of stateList in MB: 0.028064
Size of statePos in MB: 0.059752
ntails: 100
Generating high energy basis for highest Emax...
Size of set of vectors for HE basis (MB): 783.517944
Size of stateList in MB: 750.421304
Size of statePos in MB: 1621.066712
Size of set of vectors for HE basis (MB): 210.913312
Size of stateList in MB: 258.723032
Size of statePos in MB: 437.305712
Size of HE basis for DH2: 928172
Size of HE basis for DH3: 328773
Filename: /Users/lorenzovitale/Phi4/statefuncs.py

Line #    Mem usage    Increment   Line Contents
================================================
    84 1145.117 MiB    0.000 MiB       @profile
    85                                 def __init__(self, k, stateset, helper, orderEnergy=True):
    86                                     """ Standard constructor
    87                                     k: parity quantum number
    88                                     stateset: set or list of states in representation 1
    89                                     helper: Helper object
    90                                     """
    91 1145.117 MiB    0.000 MiB           self.k = k
    92 1145.117 MiB    0.000 MiB           self.helper = helper
    93 1145.117 MiB    0.000 MiB           energy = helper.energy
    94                             
    95 1145.117 MiB    0.000 MiB           self.orderEnergy = orderEnergy
    96                                     # Order the states in energy
    97 1145.117 MiB    0.000 MiB           if orderEnergy:
    98 2568.730 MiB 1423.613 MiB               self.stateList = list(sorted(stateset, key=energy))
    99                                     else:
   100  183.043 MiB -2385.688 MiB               self.stateList = list(stateset)
   101 1794.805 MiB 1611.762 MiB           print("Size of stateList in MB:", MBsize(self.stateList))
   102                             
   103 1794.809 MiB    0.004 MiB           self.size = len(self.stateList)
   104                             
   105 1803.660 MiB    8.852 MiB           self.energyList = [energy(state) for state in self.stateList]
   106 1805.441 MiB    1.781 MiB           self.occnList = [occn(state) for state in self.stateList]
   107 1805.973 MiB    0.531 MiB           self.parityList = [int(state==reverse(state)) for state in self.stateList]
   108                             
   109 1804.691 MiB   -1.281 MiB           try:
   110 1805.949 MiB    1.258 MiB               self.Emax = max(self.energyList)
   111 1805.949 MiB    0.000 MiB               self.Emin = min(self.energyList)
   112                                     except IndexError:
   113                                         self.Emax = None
   114                                         self.Emin = None
   115                             
   116 1805.949 MiB    0.000 MiB           self.statePos = {}
   117 3231.707 MiB 1425.758 MiB           for i,state in enumerate(self.stateList):
   118 3231.703 MiB   -0.004 MiB               self.statePos[tuple(helper.torepr2(state))] = i
   119 3231.707 MiB    0.004 MiB               self.statePos[tuple(helper.torepr2(state)[::-1])] = i
   120                             
   121 1571.141 MiB -1660.566 MiB           print("Size of statePos in MB:", MBsize(self.statePos))


Filename: /Users/lorenzovitale/Phi4/phi4.py

Line #    Mem usage    Increment   Line Contents
================================================
   144  183.043 MiB    0.000 MiB       @profile
   145                                 def genHEBases(self, k, basisl, EL, ELpp):
   146                                     """ Generate a high-energy basis from a set of tails
   147                                     k: parity quantum number
   148                                     basisl: Basis instance containing the set of tails
   149                                     EL: maximal energy of the generated basis
   150                                     """
   151                             
   152  183.043 MiB    0.000 MiB           self.basisl[k] = basisl
   153                             
   154 1571.145 MiB 1388.102 MiB           for Emax,basis in zip((EL, ELpp),(self.basisH, self.basish)):
   155                                         # Generate all the operators between the selected states and the states
   156                                         # in the range [0, EL]
   157                             
   158 1163.582 MiB -407.562 MiB               if Emax == None:
   159                                             basis[k] = None
   160                                             continue
   161                             
   162 1190.723 MiB   27.141 MiB               Vlist = V4OpsSelectedFull(basisl, Emax)
   163 1775.305 MiB  584.582 MiB               vectorset = set()
   164                             
   165 1775.098 MiB   -0.207 MiB               for V in Vlist:
   166 1766.453 MiB   -8.645 MiB                   for v in V.genBasis(basisl, Emax):
   167                             # Don't add twice states connected by parity inversion
   168 1766.453 MiB    0.000 MiB                       if v not in vectorset and v[::-1] not in vectorset:
   169 1766.453 MiB    0.000 MiB                           vectorset.add(v)
   170                             
   171 1766.453 MiB    0.000 MiB               helper = Vlist[0].helper
   172                             
   173 1145.113 MiB -621.340 MiB               print("Size of set of vectors for HE basis (MB):", MBsize(vectorset))
   174                             
   175                                         # Basis of selected states with energy <= Emax
   176 2857.781 MiB 1712.668 MiB               basis[k] = Basis(k, (helper.torepr1(v) for v in vectorset), helper)


